From f7682260b3ec1e2b6c7304c58e26d32ad48ff9e1 Mon Sep 17 00:00:00 2001
From: Alec Ari <neotheuser@ymail.com>
Date: Sun, 2 Jun 2019 18:38:32 -0500
Subject: drivers/gpu/drm/{radeon,amdgpu}: Split up Kconfig options

Split up Kconfig a bit for amdgpu and radeon drivers. Fix all compiling
errors (conflicting type error and undefined symbols) resulting from
the new changes.

KMS and base driver functionality does not
depend on HWMON, POWER_SUPPLY and BACKLIGHT_* options.

Tested on numerous x86 desktops (no laptops.)

Signed-off-by: Alec Ari <neotheuser@ymail.com>
---
 drivers/gpu/drm/Kconfig                        | 8 --------
 drivers/gpu/drm/amd/amdgpu/amdgpu_pm.c         | 6 ++++++
 drivers/gpu/drm/amd/amdgpu/atombios_encoders.c | 3 ++-
 drivers/gpu/drm/radeon/radeon_pm.c             | 6 ++++++
 4 files changed, 14 insertions(+), 9 deletions(-)

diff --git a/drivers/gpu/drm/Kconfig b/drivers/gpu/drm/Kconfig
index 3cb69c446a9d..8ea9b49f2183 100644
--- a/drivers/gpu/drm/Kconfig
+++ b/drivers/gpu/drm/Kconfig
@@ -195,10 +195,6 @@ config DRM_RADEON
 	select FW_LOADER
 	select DRM_KMS_HELPER
 	select DRM_TTM
-	select POWER_SUPPLY
-	select HWMON
-	select BACKLIGHT_CLASS_DEVICE
-	select BACKLIGHT_LCD_SUPPORT
 	select INTERVAL_TREE
 	help
 	  Choose this option if you have an ATI Radeon graphics card.  There
@@ -216,10 +212,6 @@ config DRM_AMDGPU
 	select DRM_KMS_HELPER
 	select DRM_SCHED
 	select DRM_TTM
-	select POWER_SUPPLY
-	select HWMON
-	select BACKLIGHT_CLASS_DEVICE
-	select BACKLIGHT_LCD_SUPPORT
 	select INTERVAL_TREE
 	select CHASH
 	help
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_pm.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_pm.c
index 0ed41a9d2d77..f8bc3326a95a 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_pm.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_pm.c
@@ -1721,10 +1721,12 @@ static const struct attribute_group hwmon_attrgroup = {
 	.is_visible = hwmon_attributes_visible,
 };
 
+#if defined CONFIG_HWMON
 static const struct attribute_group *hwmon_groups[] = {
 	&hwmon_attrgroup,
 	NULL
 };
+#endif
 
 void amdgpu_dpm_thermal_work_handler(struct work_struct *work)
 {
@@ -2018,6 +2020,7 @@ int amdgpu_pm_sysfs_init(struct amdgpu_device *adev)
 	if (adev->pm.dpm_enabled == 0)
 		return 0;
 
+#if defined CONFIG_HWMON
 	adev->pm.int_hwmon_dev = hwmon_device_register_with_groups(adev->dev,
 								   DRIVER_NAME, adev,
 								   hwmon_groups);
@@ -2027,6 +2030,7 @@ int amdgpu_pm_sysfs_init(struct amdgpu_device *adev)
 			"Unable to register hwmon device: %d\n", ret);
 		return ret;
 	}
+#endif
 
 	ret = device_create_file(adev->dev, &dev_attr_power_dpm_state);
 	if (ret) {
@@ -2127,8 +2131,10 @@ void amdgpu_pm_sysfs_fini(struct amdgpu_device *adev)
 	if (adev->pm.dpm_enabled == 0)
 		return;
 
+#if defined CONFIG_HWMON
 	if (adev->pm.int_hwmon_dev)
 		hwmon_device_unregister(adev->pm.int_hwmon_dev);
+#endif
 	device_remove_file(adev->dev, &dev_attr_power_dpm_state);
 	device_remove_file(adev->dev, &dev_attr_power_dpm_force_performance_level);
 
diff --git a/drivers/gpu/drm/amd/amdgpu/atombios_encoders.c b/drivers/gpu/drm/amd/amdgpu/atombios_encoders.c
index 60e2447e12c5..8877178b33f4 100644
--- a/drivers/gpu/drm/amd/amdgpu/atombios_encoders.c
+++ b/drivers/gpu/drm/amd/amdgpu/atombios_encoders.c
@@ -254,7 +254,8 @@ amdgpu_atombios_encoder_fini_backlight(struct amdgpu_encoder *amdgpu_encoder)
 
 #else /* !CONFIG_BACKLIGHT_CLASS_DEVICE */
 
-void amdgpu_atombios_encoder_init_backlight(struct amdgpu_encoder *encoder)
+void amdgpu_atombios_encoder_init_backlight(struct amdgpu_encoder *amdgpu_encoder,
+				     struct drm_connector *drm_connector)
 {
 }
 
diff --git a/drivers/gpu/drm/radeon/radeon_pm.c b/drivers/gpu/drm/radeon/radeon_pm.c
index 4b6542538ff9..adac2e0c50a5 100644
--- a/drivers/gpu/drm/radeon/radeon_pm.c
+++ b/drivers/gpu/drm/radeon/radeon_pm.c
@@ -772,10 +772,12 @@ static const struct attribute_group hwmon_attrgroup = {
 	.is_visible = hwmon_attributes_visible,
 };
 
+#if defined CONFIG_HWMON
 static const struct attribute_group *hwmon_groups[] = {
 	&hwmon_attrgroup,
 	NULL
 };
+#endif
 
 static int radeon_hwmon_init(struct radeon_device *rdev)
 {
@@ -792,6 +794,7 @@ static int radeon_hwmon_init(struct radeon_device *rdev)
 	case THERMAL_TYPE_KV:
 		if (rdev->asic->pm.get_temperature == NULL)
 			return err;
+#if defined CONFIG_HWMON
 		rdev->pm.int_hwmon_dev = hwmon_device_register_with_groups(rdev->dev,
 									   "radeon", rdev,
 									   hwmon_groups);
@@ -800,6 +803,7 @@ static int radeon_hwmon_init(struct radeon_device *rdev)
 			dev_err(rdev->dev,
 				"Unable to register hwmon device: %d\n", err);
 		}
+#endif
 		break;
 	default:
 		break;
@@ -810,8 +814,10 @@ static int radeon_hwmon_init(struct radeon_device *rdev)
 
 static void radeon_hwmon_fini(struct radeon_device *rdev)
 {
+#if defined CONFIG_HWMON
 	if (rdev->pm.int_hwmon_dev)
 		hwmon_device_unregister(rdev->pm.int_hwmon_dev);
+#endif
 }
 
 static void radeon_dpm_thermal_work_handler(struct work_struct *work)
-- 
2.20.1

